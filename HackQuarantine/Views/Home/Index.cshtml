@{
    ViewData["Title"] = "Home Page";
    Layout = "_Layout";
}

<!DOCTYPE html>
<html>
<head>
    <title>HackQuarantine</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBcdspTAODl0dMGPbpkStxmhYRqroYwG0Y&libraries=places&callback=initMap" async defer></script>
    <style>
        #map {
            width: 100%;
            height: 400px;
            background-color: grey;
        }
    </style>

</head>
<body>

    <div>
        <form asp-action="Search" method="post">
            <div asp-validation-summary="All"></div>
            <input id="search" name="search" type="text" placeholder="Enter search..." />
            <input id="city" name="city" type="text" placeholder="Enter city..." />
            <button onclick="Search()" id="searchButton" type="submit" class="btn btn-info">Search</button>
        </form>
    </div>
    <br />
    <div id="map"></div>
</body>
</html>

<script>
    var map;
    var service;
    var infowindow;
    var pos;
    var request;
    var place;
    var city;

    function Search() {
        var search = $('#search').val();
        var city = $('#city').val();
        sessionStorage.setItem('search', search);
        sessionStorage.setItem('city', city);
    };

    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: {
                lat: -34.397,
                lng: 150.644
            },
            zoom: 6
        });
        infoWindow = new google.maps.InfoWindow;

        getLocation();
        getNearByPlaces();
        callback();
    }

    function getLocation() {
        // Try HTML5 geolocation.
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                var marker = new google.maps.Marker({
                    position: pos,
                    map: map,
                    icon: "http://maps.google.com/mapfiles/ms/micons/blue.png"
                })
                infoWindow.setPosition(pos);
                infoWindow.setContent('Location found.');
                infoWindow.open(map);
                map.setCenter(pos);
                getNearByPlaces(pos);
                var GEOCODING = 'https://maps.googleapis.com/maps/api/geocode/json?latlng=' + position.coords.latitude + '%2C' + position.coords.longitude + '&key=AIzaSyBcdspTAODl0dMGPbpkStxmhYRqroYwG0Y&language=en';

                $.getJSON(GEOCODING).done(function (location) {
                    // Get City
                    city = location.results[0].address_components[2].long_name;
                });
            }, function () {
                handleLocationError(true, infoWindow, map.getCenter());
            });
        } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, infoWindow, map.getCenter());
        }

        infowindow = new google.maps.InfoWindow();
    }

    function getNearByPlaces(pos) {
        request = {
            location: pos,
            radius: '500',
            query: 'grocery'
        };

        service = new google.maps.places.PlacesService(map);
        service.textSearch(request, callback);
    }

    function callback(results, status) {
        var resultJson = [];
        if (status == google.maps.places.PlacesServiceStatus.OK) {
            var bounds = new google.maps.LatLngBounds();
            for (var i = 0; i < results.length; i++) {
                place = results[i];
                var obj = {
                    "PlaceId": place.place_id,
                    "Name": place.name,
                    "Address": place.formatted_address,
                    "Rating": place.rating
                }
                resultJson.push(obj);
                var mark = createMarker(results[i]);
                bounds.extend(mark.getPosition());
            }
            map.fitBounds(bounds);

            $.ajax({
                url: "@Url.Action("GetCity")",
                type: "POST",
                data: JSON.stringify(city),
                contentType: "application/json; charset=utf-8",
                dataType: "json"
            });

            $.ajax({
                url: "@Url.Action("AddStores")",
                type: "POST",
                data: JSON.stringify(resultJson),
                contentType: "application/json; charset=utf-8",
                dataType: "json"
            });

        } else console.log("callback.status=" + status);
    }

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
            'Error: The Geolocation service failed.' :
            'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
    }

    function createMarker(place) {
        var marker = new google.maps.Marker({
            map: map,
            position: place.geometry.location,
            icon: "http://maps.google.com/mapfiles/ms/micons/red.png"
        });

        google.maps.event.addListener(marker, 'click', function () {
            infowindow.setContent(place.name);
            infowindow.open(map, this);
        });
        return marker;
    }
</script>